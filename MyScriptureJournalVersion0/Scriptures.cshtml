@{
    Layout = null;
    var db = Database.Open("ScripturesDatabase");
    var selectCommand = "SELECT * FROM FavoriteScriptures";
    var searchTerm = "";

    if (!Request.QueryString["searchBook"].IsEmpty())
    {
        selectCommand = "SELECT * FROM FavoriteScriptures WHERE Book = @0";
        searchTerm = Request.QueryString["searchBook"];
    }

    if (!Request.QueryString["searchKeyword"].IsEmpty())
    {
        selectCommand = "SELECT * FROM FavoriteScriptures WHERE Notes LIKE @0";
        searchTerm = "%" + Request["searchKeyword"] + "%";
    }

    var selectedData = db.Query(selectCommand, searchTerm);
    var grid = new WebGrid(source: selectedData, defaultSort:"Book", rowsPerPage: 5);
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" content="width=device-width" />
    <title>My Scripture Journal</title>
    <style type="text/css">
        .grid {
            margin: 4px;
            border-collapse: collapse;
            width: 600px;
        }

            .grid th, .grid td {
                border: 1px solid #C0C0C0;
                padding: 5px;
            }

        .head {
            background-color: #E8E8E8;
            font-weight: bold;
            color: #FFF;
        }

        .alt {
            background-color: #E8E8E8;
            color: #000;
        }
    </style>
</head>
<body>
    <h1>Scripture Journal</h1>
    <form method="get">
        <div>
            <label for="searchBook">Search by Book:</label>
            <input type="text" name="searchBook" value="@Request.QueryString["searchBook"]" />
            <input type="submit" value="Search Books" /><br/>
            (Leave blank to list all your favorite scriptures.)<br/>
        </div>
        <div>
            <label for="searchKeyword">Search by notes:</label>
            <input type="text" name="searchKeyword" value="@Request.QueryString["searchKeyword"]" />
            <input type="submit" value="Search Keywords" /><br/>
         </div>
    </form>
    <div name="grid">
        @grid.GetHtml(
            tableStyle: "grid",
            headerStyle: "head",
            alternatingRowStyle: "alt",
            columns: grid.Columns(
                grid.Column("Book"),
                grid.Column("Chapter"),
                grid.Column("Verse"),
                grid.Column("Notes"),
                grid.Column("Date", format: (item) => string.Format("{0:MM-dd-yyyy}", item.Date))
            )
         )
    </div>
    <p><a href="~/AddScripture">Add a scripture</a></p>
</body>
</html>
